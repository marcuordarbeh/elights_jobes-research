# /home/inno/elights_jobes-research/scripts/env.example
# -----------------------------------------------------------------------------
# Example Environment Variables for Elights Jobes Research Project
# Copy this file to `.env` in the project root and replace placeholders
# with your actual configuration and secrets.
# DO NOT COMMIT THE ACTUAL `.env` FILE TO VERSION CONTROL.
# -----------------------------------------------------------------------------

# --- Core Application Settings ---
RUST_LOG=info,core_api=debug,domain=debug # Log levels (e.g., info, debug, warn)
API_BIND_ADDR=0.0.0.0:8080            # Address and port for the Core API to listen on

# --- Database Configuration (PostgreSQL) ---
POSTGRES_USER=core_user                 # Database username
POSTGRES_PASSWORD=Ch@ngeMeSecureP@ssw0rd! # Database password (USE A STRONG, UNIQUE PASSWORD)
POSTGRES_DB=elights_db                  # Database name
POSTGRES_HOST=postgres                  # Hostname (matches docker-compose service name)
POSTGRES_PORT=5432                      # Port PostgreSQL listens on
DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB} # Connection URL for Diesel/SQLx

# --- Security & Authentication ---
JWT_SECRET=Generate-A-Very-Strong-Random-Secret-Key-Here-At-Least-32-Bytes # Secret for signing JWT tokens (REQUIRED)
JWT_DURATION_HOURS=24                 # How long JWT tokens are valid in hours
# Optional: Comma-separated list of IPs allowed to access certain API endpoints (if IPWhitelist middleware enabled)
# ALLOWED_IPS=192.168.1.100,10.0.0.5

# --- TLS Configuration (Optional: If API serves HTTPS directly) ---
TLS_ENABLED=false                     # Set to true to enable TLS binding in core-api main.rs
TLS_BIND_ADDR=0.0.0.0:8443            # Address and port for TLS listener (if enabled)
TLS_CERT_PATH=./config/certs/cert.pem # Path to TLS certificate file (relative to where API runs)
TLS_KEY_PATH=./config/certs/key.pem   # Path to TLS private key file (relative to where API runs)

# --- Bank Integrations (Replace with REAL credentials/endpoints) ---
# Base URLs should point to Sandbox/Test environments initially
# USA Banks
WELLS_FARGO_API_BASE=https://api.sandbox.wellsfargo.com # Example Sandbox URL
WELLS_FARGO_API_KEY=your_wf_api_key_here
CHASE_API_BASE=https://api-sandbox.chase.com # Example Sandbox URL
CHASE_API_KEY=your_chase_api_key_here
JPMORGAN_API_BASE=https://api-sandbox.jpmorgan.com # Example Sandbox URL
JPMORGAN_API_KEY=your_jpm_api_key_here
# Add BofA, Citi, US Bank, PNC placeholders if APIs identified
BANK_OF_AMERICA_API_KEY=your_bofa_key
CITIBANK_API_KEY=your_citi_key
US_BANK_API_KEY=your_usb_key
PNC_BANK_API_KEY=your_pnc_key

# European Banks (Often use OAuth2 - tokens might be dynamic or require client_id/secret)
BNP_PARIBAS_API_BASE=https://sandbox.psd2.api.cib.bnpparibas # Example Sandbox URL
BNP_PARIBAS_OAUTH_TOKEN=your_bnp_token_or_fetch_mechanism
DEUTSCHE_BANK_API_BASE=https://simulator-api.db.com/gw/dbapi # Example Simulator URL
DEUTSCHE_BANK_CLIENT_ID=your_db_client_id_here
DEUTSCHE_BANK_CLIENT_SECRET=your_db_client_secret_here
ING_GROUP_API_KEY=your_ing_key # Or client ID/secret
SANTANDER_API_BASE=https://sandbox.api.santander.co.uk # Example Sandbox URL
SANTANDER_OAUTH_TOKEN=your_santander_token_or_fetch_mechanism
BARCLAYS_API_KEY=your_barclays_key # Or client ID/secret
HSBC_EUROPE_API_KEY=your_hsbc_key # Or client ID/secret

# --- Cryptography Exchange Integrations ---
# BTCPay Server (URL should point to your instance)
BTCPAY_URL=http://localhost:23000 # Example: External BTCPay instance running locally
# If running BTCPay via docker-compose, use internal URL: http://btcpay:80 (or relevant port)
BTCPAY_API_KEY=YourBtcPayServerGeneratedApiKeyHere # API Key from your BTCPay Server instance (REQUIRED)
BTCPAY_DEFAULT_STORE_ID=YourBtcPayServerStoreIdHere # Store ID from your BTCPay Server (REQUIRED)
# BTCPAY_WEBHOOK_SECRET=Generate_A_Secret_For_Webhook_Verification # Secret configured in BTCPay webhook settings (REQUIRED for webhook handler)

# Monero Wallet RPC (URL/Credentials for monero-wallet-rpc daemon)
MONERO_WALLET_RPC_PORT=18083 # Port used in docker-compose
MONERO_WALLET_RPC=http://monero-wallet-rpc:${MONERO_WALLET_RPC_PORT} # Internal Docker network URL
MONERO_WALLET_USER=rpc_user            # Username for RPC authentication
MONERO_WALLET_PASSWORD=rpc_p@sswOrd!   # Password for RPC authentication (USE A STRONG PASSWORD)
MONERO_DAEMON_ADDRESS=host.docker.internal:18081 # Address of the 'monerod' node the wallet RPC connects to (adjust if needed)
MONERO_NETWORK=stagenet                # Network (mainnet, stagenet, testnet)

# --- Tor Network Configuration ---
TOR_SOCKS_PORT=9050                    # SOCKS port exposed by the Tor container
TOR_CONTROL_PORT=9051                  # Control port exposed by the Tor container
TOR_PASSWORD=Ch@ngeMeT0rP@sswOrd!      # Control port password (USE A STRONG PASSWORD)
# TOR_HASHED_PASSWORD=...              # Optional: Hashed password if using torrc directly
# Optional: Address for core-api to use for connecting to Tor proxy
TOR_SOCKS_PROXY=tor:${TOR_SOCKS_PORT} # Internal Docker network address

# --- Financial Times (FT) API Integration ---
FT_API_KEY=YourFtApiKeyHere            # API Key obtained from developer.ft.com (REQUIRED)
FT_PUSH_ENABLED=false                  # Enable receiving push notifications (set to true if webhook handler is ready)
FT_PUSH_CALLBACK_URL=https://yourapi.example.com/api/v1/ft/notifications/push # Publicly accessible URL for FT to send notifications to (REQUIRED if FT_PUSH_ENABLED=true)

# --- P2P Node Configuration (Optional: If running tor-network node) ---
# P2P_LISTEN_ADDR=/ip4/0.0.0.0/tcp/0   # Address for the P2P node to listen on
# P2P_BOOTSTRAP_PEERS=/dnsaddr/bootstrap.libp2p.io/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN # Example bootstrap peers (comma-separated)
# P2P_DIAL_TIMEOUT_SECS=20             # Timeout for dialing peers
# P2P_IDLE_TIMEOUT_SECS=60             # Timeout for idle connections

# -----------------------------------------------------------------------------