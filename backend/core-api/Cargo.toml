# /home/inno/elights_jobes-research/backend/core-api/Cargo.toml
[package]
name = "core-api"
version = "0.1.0"
edition = "2021"

# [[bin]] # Removed as main.rs is default binary
# name = "core-api"
# path = "src/main.rs"

[dependencies]
# Web Framework & Runtime
actix-web = "4.4" # Use recent stable version
actix-rt = "2"
actix-service = "2"
actix-cors = "0.6" # Optional: For CORS handling

# Database (Diesel ORM + Pooling)
diesel = { version = "2.1", features = [
    "postgres",
    "chrono",
    "uuid",
    "serde_json",
    "r2d2", # Enable r2d2 connection pooling
    "numeric",
]}
r2d2 = "0.8" # Diesel's preferred pooling library
bigdecimal = { version = "0.4", features = ["serde"] } # Required by diesel for Numeric

# Async & Futures
tokio = { version = "1", features = ["full"] }
futures = "0.3"
async-trait = "0.1" # If defining async traits within API layer

# Serialization / Deserialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Configuration & Environment
dotenv = "0.15"
config = { version = "0.13", features = ["toml", "yaml", "json", "env"], default-features = false, optional = true } # Alternative config crate

# Logging & Error Handling
env_logger = "0.10"
log = "0.4"
thiserror = "1.0"

# Security & Auth
rustls = "0.21"
rustls-pemfile = "1.0"
# Enable feature if used directly in API layer (likely called via domain)
# jsonwebtoken = { version = "8", optional = true }
# bcrypt = { version = "0.14", optional = true }
base64 = "0.21" # For potential basic auth or signature handling

# HTTP Client (for calling external services like FT API)
reqwest = { version = "0.11", features = ["json", "rustls-tls", "socks"], default-features = false } # Enable SOCKS for Tor proxy
# tokio-socks = { version = "0.5", optional = true } # If reqwest socks feature isn't sufficient

# Utilities
uuid = { version = "1", features = ["v4", "serde"] }
rust_decimal = { version = "1.32", features = ["serde"] } # Consistent version
once_cell = "1.17" # For static initialisation if needed
hex = "0.4" # For hex encoding/decoding if needed
chrono = { version = "0.4", features = ["serde"] } # For timestamps

# Workspace Dependencies (Ensure paths are correct relative to this Cargo.toml)
domain = { path = "../domain" }
cryptography-exchange = { path = "../../cryptography-exchange" }
bank-integrations = { path = "../../bank-integrations" }
# tor-network = { path = "../../tor-network" } # Only if directly interacting with tor-network P2P logic

[features]
default = []
# Enable config crate if used
# config_loader = ["dep:config"]
# Enable JWT if used directly here
# jwt_support = ["dep:jsonwebtoken"]

[dev-dependencies]
actix-http = "3"
actix-test = "0.1"
# reqwest used above for integration tests already included in main dependencies
# Add mocking libraries if needed (e.g., mockall)