{"ast":null,"code":"var _jsxFileName = \"/home/inno/payment-system-/frontend/src/components/CryptoConversion.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CryptoConversion = () => {\n  _s();\n  const [cryptoWallet, setCryptoWallet] = useState('');\n  const [amount, setAmount] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const handleConversion = async () => {\n    setLoading(true);\n    setMessage('');\n    try {\n      // The backend should perform the conversion and return a crypto wallet address\n      const response = await axios.post('/api/convert_to_crypto', {\n        amount\n      });\n      const {\n        walletAddress\n      } = response.data;\n      setCryptoWallet(walletAddress);\n      setMessage('Conversion successful');\n    } catch (error) {\n      console.error('Crypto conversion failed', error);\n      setMessage('Crypto conversion failed');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-10 p-4 bg-white shadow rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Convert to Crypto Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Amount in USD\",\n      value: amount,\n      onChange: e => setAmount(e.target.value),\n      className: \"w-full p-2 mb-4 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConversion,\n      className: \"w-full bg-red-500 text-white p-2 rounded hover:bg-red-600\",\n      disabled: loading,\n      children: loading ? 'Converting...' : 'Convert'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), cryptoWallet && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Crypto Wallet Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), \" \", cryptoWallet]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-center\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoConversion, \"IWF98WupMGFoEIpBLA+nep4v0Dc=\");\n_c = CryptoConversion;\nexport default CryptoConversion;\nvar _c;\n$RefreshReg$(_c, \"CryptoConversion\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CryptoConversion","_s","cryptoWallet","setCryptoWallet","amount","setAmount","loading","setLoading","message","setMessage","handleConversion","response","post","walletAddress","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/inno/payment-system-/frontend/src/components/CryptoConversion.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst CryptoConversion: React.FC = () => {\n  const [cryptoWallet, setCryptoWallet] = useState('');\n  const [amount, setAmount] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const handleConversion = async () => {\n    setLoading(true);\n    setMessage('');\n    try {\n      // The backend should perform the conversion and return a crypto wallet address\n      const response = await axios.post('/api/convert_to_crypto', { amount });\n      const { walletAddress } = response.data;\n      setCryptoWallet(walletAddress);\n      setMessage('Conversion successful');\n    } catch (error: any) {\n      console.error('Crypto conversion failed', error);\n      setMessage('Crypto conversion failed');\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto mt-10 p-4 bg-white shadow rounded\">\n      <h2 className=\"text-2xl font-bold mb-4\">Convert to Crypto Wallet</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Amount in USD\"\n        value={amount}\n        onChange={e => setAmount(e.target.value)}\n        className=\"w-full p-2 mb-4 border rounded\"\n      />\n      <button\n        onClick={handleConversion}\n        className=\"w-full bg-red-500 text-white p-2 rounded hover:bg-red-600\"\n        disabled={loading}\n      >\n        {loading ? 'Converting...' : 'Convert'}\n      </button>\n      {cryptoWallet && (\n        <div className=\"mt-4\">\n          <p>\n            <strong>Crypto Wallet Address:</strong> {cryptoWallet}\n          </p>\n        </div>\n      )}\n      {message && <div className=\"mt-4 text-center\">{message}</div>}\n    </div>\n  );\n};\n\nexport default CryptoConversion;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}